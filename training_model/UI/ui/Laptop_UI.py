# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\ui\Laptop_UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import subprocess

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(486, 254)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.cmb_model = QtWidgets.QComboBox(self.centralwidget)
        self.cmb_model.setGeometry(QtCore.QRect(90, 60, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.cmb_model.setFont(font)
        self.cmb_model.setObjectName("cmb_model")
        self.cmb_model.addItem("")
        self.cmb_model.addItem("")
        self.cmb_model.addItem("")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 20, 281, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.btn_TakePhoto = QtWidgets.QPushButton(self.centralwidget)
        self.btn_TakePhoto.setGeometry(QtCore.QRect(90, 140, 93, 28))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        self.btn_TakePhoto.setFont(font)
        self.btn_TakePhoto.setObjectName("btn_TakePhoto")
        self.btn_Webcam = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Webcam.setGeometry(QtCore.QRect(320, 140, 93, 28))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        self.btn_Webcam.setFont(font)
        self.btn_Webcam.setObjectName("btn_Webcam")
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setGeometry(QtCore.QRect(100, 140, 0, 28))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.splitter_2.raise_()
        self.cmb_model.raise_()
        self.label.raise_()
        self.btn_TakePhoto.raise_()
        self.btn_Webcam.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 486, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.btn_TakePhoto.clicked.connect(self.handle_take_photo)
        self.btn_Webcam.clicked.connect(self.handle_webcam)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.cmb_model.setItemText(0, _translate("MainWindow", "CNN Model"))
        self.cmb_model.setItemText(1, _translate("MainWindow", "MobileNet Model"))
        self.cmb_model.setItemText(2, _translate("MainWindow", "ResNet Model"))
        self.label.setText(_translate("MainWindow", "Chọn Model muốn xử lí"))
        self.btn_TakePhoto.setText(_translate("MainWindow", "Take Photo"))
        self.btn_Webcam.setText(_translate("MainWindow", "Webcam"))

    def handle_take_photo(self):
        model = self.cmb_model.currentText()
        if model == "CNN Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/CNN_model/CNN_TakePhoto.py"])
        elif model == "MobileNet Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/MobileNet_model/MobileNet_Photo.py"])
        elif model == "ResNet Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/ResNet_Model/ResNet_Photo.py"])

    def handle_webcam(self):
        model = self.cmb_model.currentText()
        if model == "CNN Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/CNN_model/CNN_Webcam_version2.py"])
        elif model == "MobileNet Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/MobileNet_model/Mobinet_Webcam.py"])
        elif model == "ResNet Model":
            subprocess.run(["python", "D:/model/App_Mobile_Emotion/training_model/ResNet_Model/ResNet18_webcam.py"])



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
